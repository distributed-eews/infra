version: '3'
services:
  eews-zookeeper:
    restart: always
    image: confluentinc/cp-zookeeper
    container_name: eews-zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  eews-kafka:
    restart: always
    container_name: eews-kafka
    image: confluentinc/cp-kafka
    depends_on:
      - eews-zookeeper
    ports:
      - '8097:8097'
    # expose:
    #   - '29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'eews-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://eews-kafka:9092,PLAINTEXT_HOST://localhost:8097
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '3'
      KAFKA_MIN_INSYNC_REPLICAS: '1'

  eews-kafka-2:
    restart: always
    container_name: eews-kafka-2
    image: confluentinc/cp-kafka
    user: root
    depends_on:
      - eews-zookeeper
    ports:
      - '8098:8098'
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'eews-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://eews-kafka-2:9092,PLAINTEXT_HOST://localhost:8098
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '3'
      KAFKA_MIN_INSYNC_REPLICAS: '1'

  eews-kafka-3:
    restart: always
    container_name: eews-kafka-3
    image: confluentinc/cp-kafka
    user: root
    depends_on:
      - eews-zookeeper
    ports:
      - '8099:8099'
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'eews-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://eews-kafka-3:9092,PLAINTEXT_HOST://localhost:8099
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '3'
      KAFKA_MIN_INSYNC_REPLICAS: '1'

  eews-init-kafka:
    container_name: eews-init-kafka
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - eews-kafka
      - eews-kafka-2
      - eews-kafka-3
    entrypoint: ['/bin/sh', '-c']
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server eews-kafka:9092 --list
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server eews-kafka:9092 --create --if-not-exists --topic preprocessed --replication-factor 1 --partitions 3
      kafka-topics --bootstrap-server eews-kafka:9092 --create --if-not-exists --topic p_arrival --replication-factor 1 --partitions 3
      kafka-topics --bootstrap-server eews-kafka:9092 --create --if-not-exists --topic pick --replication-factor 1 --partitions 3
      kafka-topics --bootstrap-server eews-kafka:9092 --create --if-not-exists --topic prediction --replication-factor 1 --partitions 1
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server eews-kafka:9092 --list
      "

  eews-redis:
    image: redis
    container_name: eews-redis
    ports:
      - '6379:6379'

  eews-seeder:
    depends_on:
      - eews-redis
    image: pragusga/eews:seeder
    container_name: eews-seeder
    environment:
      REDIS_HOST: eews-redis

  eews-producer:
    depends_on:
      - eews-init-kafka
      - eews-seeder
    image: pragusga/eews:producer
    container_name: eews-producer
    env_file:
      - .producer.env
    ports:
      - '8082:8082'

  eews-queue-1:
    depends_on:
      - eews-init-kafka
    image: pragusga/eews:queue
    container_name: eews-queue-1
    env_file:
      - .queue.env

  eews-queue-2:
    depends_on:
      - eews-init-kafka
    image: pragusga/eews:queue
    container_name: eews-queue-2
    env_file:
      - .queue.env

  eews-queue-3:
    depends_on:
      - eews-init-kafka
    image: pragusga/eews:queue
    container_name: eews-queue-3
    env_file:
      - .queue.env

  eews-picker-1:
    depends_on:
      - eews-nginx
    image: pragusga/eews:picker
    container_name: eews-picker-1
    env_file:
      - .picker.env

  eews-picker-2:
    depends_on:
      - eews-nginx
    image: pragusga/eews:picker
    container_name: eews-picker-2
    env_file:
      - .picker.env

  eews-picker-3:
    depends_on:
      - eews-nginx
    image: pragusga/eews:picker
    container_name: eews-picker-3
    env_file:
      - .picker.env

  eews-ps-arrival-1:
    image: pragusga/eews:ps-arrival
    container_name: eews-ps-arrival-1
    ports:
      - 8084:3000

  eews-ps-arrival-2:
    image: pragusga/eews:ps-arrival
    container_name: eews-ps-arrival-2
    ports:
      - 8085:3000

  eews-ps-arrival-3:
    image: pragusga/eews:ps-arrival
    container_name: eews-ps-arrival-3
    ports:
      - 8086:3000

  eews-nginx:
    image: nginx
    container_name: eews-nginx
    ports:
      - '8083:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - eews-ps-arrival-1
      - eews-ps-arrival-2
      - eews-ps-arrival-3

  eews-ws-rest:
    depends_on:
      - eews-producer
      - eews-seeder
    image: pragusga/eews:ws-rest
    container_name: eews-ws-rest
    env_file:
      - .ws-rest.env
    ports:
      - '8080:8080'

  eews-prometheus:
    container_name: eews-prometheus
    image: prom/prometheus:v2.24.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    restart: always

  eews-grafana:
    image: grafana/grafana:latest
    container_name: eews-grafana
    ports:
      - '3001:3001'
    environment:
      GF_SERVER_HTTP_PORT: 3001
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: adminpassword
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  grafana-storage:
  prometheus_data:
